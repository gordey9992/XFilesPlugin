name: XFiles Plugin CI/CD

on:
  push:
    branches: [ "main", "develop" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '21' ]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: maven
        
    - name: Build and test
      run: |
        mvn -B clean compile test
        mvn -B package -DskipTests
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.java }}
        path: |
          target/surefire-reports
          target/failsafe-reports
        retention-days: 7

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        
    - name: Build JAR
      run: mvn -B clean package -DskipTests
      
    - name: Verify JAR
      run: |
        jar tf target/XFilesPlugin-*.jar | grep -E "(plugin\.yml|config\.yml|messages\.yml)"
        echo "✅ JAR файл содержит все необходимые ресурсы"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: XFilesPlugin-Build-${{ github.sha }}
        path: |
          target/*.jar
          target/*-sources.jar
        retention-days: 30
        
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: target/XFilesPlugin-*.jar
        body_path: .github/RELEASE_TEMPLATE.md
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: XFilesPlugin-Build-${{ github.sha }}
        path: ./artifacts
        
    - name: Display structure
      run: ls -la ./artifacts/
